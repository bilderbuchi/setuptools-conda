name: Build

on:
  push:
    branches:
      - master
  create:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'

defaults:
  run:
    shell: bash

env:
  SCM_LOCAL_SCHEME: no-local-version

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - { os: ubuntu-latest,   python: 3.8,  arch: x64 }
          - { os: ubuntu-latest,   python: 3.7,  arch: x64 }
          - { os: ubuntu-latest,   python: 3.6,  arch: x64 }

          - { os: macos-latest,    python: 3.8,  arch: x64 }
          - { os: macos-latest,    python: 3.7,  arch: x64 }
          - { os: macos-latest,    python: 3.6,  arch: x64 }

          - { os: windows-latest,  python: 3.8,  arch: x64 }
          - { os: windows-latest,  python: 3.7,  arch: x64 }
          - { os: windows-latest,  python: 3.6,  arch: x64 }

          - { os: windows-latest,  python: 3.8,  arch: x86 }
          - { os: windows-latest,  python: 3.7,  arch: x86 }
          - { os: windows-latest,  python: 3.6,  arch: x86 }

    steps:
    - uses: actions/checkout@v2
    - if: github.event.ref_type != 'tag'
      run: |
        git fetch --prune --unshallow
        git tag -d $(git tag --points-at HEAD)

    - name: Install Conda
      run: |
        if [ $RUNNER_OS == Windows ] && [ ${{ matrix.arch }} == x64 ]; then
            MINICONDA=Miniconda3-latest-Windows-x86_64.exe
        elif [ $RUNNER_OS == Windows ]; then
            MINICONDA=Miniconda3-latest-Windows-x86.exe
        elif [ $RUNNER_OS == Linux ]; then
            MINICONDA=Miniconda3-latest-Linux-x86_64.sh
        else
            MINICONDA=Miniconda3-latest-MacOSX-x86_64.sh
        fi
        curl -LO "https://repo.continuum.io/miniconda/$MINICONDA" 
        if [ $RUNNER_OS == Windows ]; then
            cmd //C "$MINICONDA /S /D=%CD%\.miniconda"
        else
            bash "$MINICONDA" -b -p .miniconda
        fi
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        conda update -n base -c defaults conda
        conda create -n py${{ matrix.python }} python=${{ matrix.python }}

    - name: Build Conda Package
      run: |
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        conda activate py${{ matrix.python }}
        python -m setuptools_conda build .
    
    - uses: actions/upload-artifact@v1
      with:
        name: conda_packages
        path: ./conda_packages

  upload:
    name: Upload to Anaconda Cloud
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: conda_packages
        path: ./conda_packages

    - name: Install Miniconda and cloud client
      run: |
        curl -LO "https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh" 
        bash Miniconda3-latest-Linux-x86_64.sh -b -p .miniconda
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        conda install anaconda-client

    - name: Upload to test label
      if: github.event.ref_type != 'tag'
      run: |
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        anaconda \
          --token ${{ secrets.ANACONDA_API_TOKEN }} \
          upload \
          --user cbillington \
          --label test \
          conda_packages/*/*
          
    - name: Upload to main label
      if: github.event.ref_type == 'tag'
      run: |
        source .miniconda/etc/profile.d/conda.sh
        conda activate
        anaconda \
          --token ${{ secrets.ANACONDA_API_TOKEN }} \
          upload \
          --user cbillington \
          conda_packages/*/*